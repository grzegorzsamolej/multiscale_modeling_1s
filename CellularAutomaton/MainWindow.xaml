<Window x:Class="CellularAutomaton.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CellularAutomaton" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="MainWindow" Height="1000" Width="1250" MinWidth="1250" MinHeight="700" Closing="Window_Closing">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="150"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" IsMainMenu="True">
            <MenuItem Header="_File">
                <MenuItem
                    Click="MenuItem_Click"
                        Header="Save"
                        Icon="{materialDesign:PackIcon Kind=ContentSave}">
                </MenuItem>
                <MenuItem
                    Click="MenuItem_Click_1"
                        Header="Load"
                        Icon="{materialDesign:PackIcon Kind=Import}">
                </MenuItem>
                <MenuItem
                    Click="MenuItem_Click_2"
                        Header="Exit"
                        Icon="{materialDesign:PackIcon Kind=ExitToApp}"/>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"></ColumnDefinition>
                <ColumnDefinition Width="180"></ColumnDefinition>
                <ColumnDefinition Width="180"></ColumnDefinition>
                <ColumnDefinition Width="180"></ColumnDefinition>
                <ColumnDefinition Width="155"></ColumnDefinition>
                <ColumnDefinition Width="350"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <xctk:IntegerUpDown x:Name="xCount" HorizontalAlignment="Left" Margin="78,10,0,0" Value="20" DefaultValue="20" Minimum="3" Maximum="2000" VerticalAlignment="Top" Width="60" Height="19" Grid.Column="0"/>
            <xctk:IntegerUpDown x:Name="yCount" HorizontalAlignment="Left" Margin="78,40,0,0" Value="20" DefaultValue="20" Minimum="3" Maximum="2000" VerticalAlignment="Top" Width="60" Height="20" Grid.Column="0"/>
            <Label Content="X Count" HorizontalAlignment="Left" Margin="10,5,0,0" VerticalAlignment="Top" Grid.Column="0"/>
            <Label Content="Y Count " HorizontalAlignment="Left" Margin="10,38,0,0" VerticalAlignment="Top" Grid.Column="0"/>
            <CheckBox x:Name="showGrid" Content="Show Grid" IsChecked="True" HorizontalAlignment="Left" Margin="10,67,0,0" VerticalAlignment="Top" Grid.Column="0" Height="28" Width="98"/>
            <Button x:Name="cleanGrid" Content="Clean grid" HorizontalAlignment="Left" Margin="10,100,0,18" Width="128" Click="RefreshGrid"/>

            <xctk:IntegerUpDown x:Name="MaxStatesCount" HorizontalAlignment="Left" Margin="104,10,0,0" Value="5" DefaultValue="5" Minimum="1" VerticalAlignment="Top" Width="60" Height="20" Grid.Column="1"/>
            <Label Content="States count" HorizontalAlignment="Left" Margin="14,6,0,0" VerticalAlignment="Top" Grid.Column="1"/>
            <xctk:IntegerUpDown x:Name="mutationProbability" Value="50" DefaultValue="50" Maximum="100" Minimum="1" VerticalAlignment="Top" Width="47" Height="18" Grid.Column="1" Margin="17,61,118,0" />
            <Label Content="Mutation probability"  Grid.Column="1" Grid.ColumnSpan="2" Margin="14,35,200,90"/>
            <Button x:Name="randomizeStatesBtn" Content="Randomize states" HorizontalAlignment="Left" Margin="14,100,0,0" VerticalAlignment="Top" Click="RandomizeStates_Click" Width="150" Grid.Column="1"/>

            <ComboBox x:Name="generationRule" Style="{StaticResource MaterialDesignFilledComboBox}" materialDesign:HintAssist.Hint="Algorhitm" Grid.Column="2" Height="50" VerticalAlignment="Top" Margin="13,10,13,0"/>
            <ComboBox x:Name="boundaryConditions" Grid.Column="2" Style="{StaticResource MaterialDesignFilledComboBox}" materialDesign:HintAssist.Hint="Boundary conditions" Height="50" Margin="13,70,13,0" VerticalAlignment="Top"/>

            <ComboBox x:Name="secondPhaseMethod" materialDesign:HintAssist.Hint="Second phase method" Style="{StaticResource MaterialDesignFilledComboBox}" Grid.Column="3" Height="50" Margin="10,70,10,0" VerticalAlignment="Top"/>
            <Button x:Name="runGeneration" Content="Run" Click="RunGeneration_Click" Width="60" Grid.Column="3" Margin="10,10,111,96"/>
            <Button x:Name="stopGeneration" Content="Stop" IsEnabled="False" VerticalAlignment="Top" Click="StopGeneration" Width="60" Grid.Column="3" Margin="110,17,10,0"/>

            <CheckBox x:Name="showBorders" Content="ShowBorders" Checked="showBorders_Checked" Unchecked="showBorders_Checked" Grid.Column="4" Margin="10,10,58,110"/>
            <Label Content="BorderSize" VerticalAlignment="Top" Grid.Column="4"  Height="30" Margin="10,38,77,0"/>
            <xctk:IntegerUpDown x:Name="borderSize"  Value="1" DefaultValue="1" Maximum="10" Minimum="1" VerticalAlignment="Top" Height="22" Grid.Column="4" Margin="83,40,23,0"/>
            <Button x:Name="borderSelection" Content="Border selection" HorizontalAlignment="Left" VerticalAlignment="Top" Click="Button_Click" Grid.Column="4" Margin="10,70,0,0"/>
            <Button x:Name="removeCellsExceptBorders" Content="Clean cells" HorizontalAlignment="Left" VerticalAlignment="Top" Width="135" Click="removeCellsExceptBorders_Click" Grid.Column="4" Margin="10,108,0,0"/>

            <Button x:Name="generateInclusions" Content="Generate inclusions" HorizontalAlignment="Left" VerticalAlignment="Top"  Width="161" Click="generateInclusions_Click" Grid.Column="5" Margin="182,63,0,0"/>
            <Label Content="Inclusion count" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="5" Margin="10,13,0,0"/>
            <Label Content="Inclusion size" HorizontalAlignment="Left"  VerticalAlignment="Top" Grid.Column="5" Margin="200,13,0,0"/>
            <xctk:IntegerUpDown x:Name="inclusionCount" HorizontalAlignment="Left"  Value="5" DefaultValue="5" Minimum="1" Maximum="100" VerticalAlignment="Top" Width="60" Height="19" Grid.Column="5" Margin="104,16,0,0"/>
            <xctk:IntegerUpDown x:Name="inclusionSize" HorizontalAlignment="Left"  Value="4" DefaultValue="4" Minimum="1" Maximum="100" VerticalAlignment="Top" Width="60" Height="19" Grid.Column="5" Margin="283,16,0,0"/>
            <ComboBox x:Name="inclusionShape" materialDesign:HintAssist.Hint="Inclusion Shape" HorizontalAlignment="Left"  Width="154" Height="50" Grid.Column="5" Style="{StaticResource MaterialDesignFilledComboBox}" Margin="10,47,0,53"/>
        </Grid>
        <Border x:Name="ImageCanvas" Grid.Row="2" Background="Gray">
            <Image x:Name="gridPanel" Height="100" Width="100" MouseDown="GridMouseClick"/>
        </Border>
    </Grid>
</Window>
